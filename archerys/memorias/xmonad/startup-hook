#!/bin/bash
# TRAY ICON SOFTWARE
#

# Empathy chat client (-h: start hidden, -n: don't connect on launch)
#if [ -z "$(pgrep empathy)" ] ; then
#    empathy -h -n &
#fi

# Remmina remote desktop connection client (-i: start hidden)
#if [ -z "$(pgrep remmina)" ] ; then
#    remmina -i &
#fi

# Network manager, so we don't have to configure wifi at the command line.
if [ -z "$(pgrep nm-applet)" ] ; then
    nm-applet --sm-disable &
fi

#if [ -z "$(pgrep wicd-client)" ] ; then
#    wicd-client --tray &
#fi

if [ -z "$(pgrep batti)" ] ; then
    batti &
fi

# Applet for managing print jobs from the tray.
if [ -z "$(pgrep system-config-printer-applet)" ] ; then
    system-config-printer-applet &
fi

#
# APPLICATION LAUNCHER
#

# Use synapse as our app launcher. (-s: don't display until requested) 
if [ -z "$(pgrep synapse)" ] ; then
    synapse -s &
fi

if [ -z "$(pgrep trayer)" ] ; then
  trayer --edge bottom --align right --SetDockType true --SetPartialStrut true --expand true --width 10 --height 17 --transparent true --tint 0x000000 &
fi

if [ -z "$(pgrep tilda)" ] ; then
  tilda &
fi

#if [ -z "$(pgrep guake)" ] ; then
#  guake &
#fi

if [ -z "$(pgrep mpd)" ] ; then
  mpd &
fi

if [ -z "$(pgrep xcompmgr)" ] ; then
  xcompmgr -c &
fi

if [ -z "$(pgrep conky)" ] ; then
  conky &
fi

#feh --bg-scale ~/Im√°genes/ygritteGameOfThronesWallpaper.jpg
feh --bg-fill ~/Pictures/DSCN1903.JPG
# On login, we unlock the ssh keychain so we're not prompted for 
# passphrases later. We pipe /dev/null to ssh-add to make it realize 
# it's not running in a terminal. Otherwise, it won't launch the prompt.
# 
# If you don't use the ssh keychain you may not want this. Commented
# by default as it is assumed many users will not want this feature.

# export SSH_ASKPASS="/usr/bin/ssh-askpass"
# cat /dev/null | ssh-add &

# I disable the middle mouse button because otherwise I constantly 
# accidentally paste unwanted text in the middle of my code while scrolling. 
# Note that the id of the mouse device may be different depending on 
# which usb port it is plugged into! To find it, use:
# xinput list |grep 'id='
# In the following command, the id is the first argument, the rest is 
# the remapping.

# Commented by default as it is assumed many users will not want this.
# xinput set-button-map 10 1 0 3 4 5 6 7

